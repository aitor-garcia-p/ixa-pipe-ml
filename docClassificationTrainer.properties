# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Sample machine learning properties file
# Choose between MAXENT and PERCEPTRON
Algorithm=MAXENT
Iterations=100
Cutoff=5
Threads=4

##################################################
#### Custom parameters added by ixa-pipe-ml ######
##################################################

# Languages supported:
Language=en

# Training and Test Corpus:
TrainSet=/home/ragerri/experiments/polarity/movies.train
TestSet=/home/ragerri/experiments/polarity/movies.test

# OutputModel name:
OutputModel=en-doc-maxent-movies.bin

# Specify if adaptive features are cleared in the training and/or evaluation data.
# Options are: 'yes', 'no', 'docstart'. The first two will reset the
# features every sentence whereas the 'docstart' option will look for -DOCSTART-
# marks in the data to clear the adaptive features.
# Crossvalidation only works if ClearTrainingFeatures is set to 'yes'.
# If commented out both values default to 'no'.
ClearTrainingFeatures=yes
ClearEvaluationFeatures=no

##################
#### FEATURES ####
##################

## Range: choose between 'original' or 'lettersOnly'
BagOfWordsFeatures=yes
BagOfWordsFeaturesRange=lettersOnly

NGramFeatures=yes
NGramFeaturesRange=2:5

# DictionaryFeatures: add features if token found in some gazetteers. Comment
# it out deactivate this feature. Note that every file in the directory
# provided as parameter will be taken to be a dictionary. The dictionary format
# needs to be 'sequence\tabclass' and serialized using ixa-pipe-convert SerializeResources
# class functionalities.
#DictionaryFeatures=/home/ragerri/javacode/ixa-pipe-nerc/nerc-resources/en/dictionaries

# BrownClusterFeatures: add features using Brown clusters
# Comment it out to deactivate this feature.
# NOTE: you can add multiple clustering lexicons by chaining them with a comma.
# The brown lexicon needs to be serialized using ixa-pipe-convert SerializeResources
# functionalities
#BrownClusterFeatures=/home/ragerri/javacode/ixa-pipe-nerc/brown-rcv1.clean.tokenized-CoNLL03.txt-c1000-freq1.txt.ser.gz

# ClarkClusterFeatures: add features using Clark (2003) clusters. If value is uncommented,
# specify the location of the clustering lexicon in Clark format.
# NOTE: you can add multiple clustering lexicons by chaining them with a comma.
# The Clark lexicon needs to be serialized using ixa-pipe-convert SerializeResources
# functionalities
ClarkClusterFeatures=/home/ragerri/resources/reuters-rcv1/clark/reuters-rcv1.tok.punct.lower.300.ser.gz

# Word2VecClusterFeatures: add features using word2vec clusters. If value is
# uncommented, specify the location of the clustering lexicon in word2vec format.
# NOTE: you can add multiple clustering lexicons by chaining them with a comma.
# The Word2vec lexicon needs to be serialized using ixa-pipe-convert SerializeResources
# functionalities
#Word2VecClusterFeatures=/home/ragerri/clusters.large.txt.ser.gz

############################
## Morphological Features ##
############################

# POSTagModelFeatures: add a pos tagging model trained with ixa-pipe-ml
# POSTagModelFeaturesRange specifies the combination of features to be used: options are 'pos'
# and 'posclass' in that strict order. For example, if 'pos,posclass' is
# chosen then both types of features will be used. If 'pos,no' is chosen, then
# only pos tag features are active. If 'no,posclass' then pos tag class is chosen.
# If POSTagModelFeatures is commented out, none of these features are used.
POSTagModelFeatures=/home/ragerri/javacode/en-pos-model.bin
POSTagModelFeaturesRange=pos,posclass

# POSDictionaryFeatures: add tags as features using a dictionary. The input file format
# contains  word\tabpostag. Tabulated training data can also be used.
# The input dictionary needs to be serialized using ixa-pipe-convert SerializeResources
# functionalities
POSDictionaryFeatures=/home/ragerri/experiments/pos/penn3/train.tsv

# LemmaModelFeatures: add a lemmatizer model trained with ixa-pipe-ml
LemmaModelFeatures=/home/ragerri/javacode/en-lemma-model.bin

# LemmaDictionaryFeatures add lemma features from a dictionary
# It is required to provide a POS model trained with ixa-pipe-ml
# and a plain text word\tlemma\tpostag dictionary.
# The Lemma Dictionary needs to be serialized using ixa-pipe-convert SerializeResources
# functionalities
LemmaDictionaryFeatures=/home/ragerri/javacode/en-pos-model.bin,/home/ragerri/resources/lemmatizer-dicts/en-lemmatizer.txt


#####################################
#### CROSS VALIDATION PARAMETERS ####
#####################################

# Cross Validation Folds; if commented out it defaults to 10 cross validation
# folds.
Folds=5
# Evaluation type: choose between 'detailed' and 'error'; only for cross-validation.
# It defaults to detailed evaluation.
EvaluationType=detailed
